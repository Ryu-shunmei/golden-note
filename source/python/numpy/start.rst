什么是numpy
--------------

    numpy(Numerical Python extensions)是一个第三方的Python包，用于科学计算。这个库的前身是1995年就开始开发的一个用于数组运算的库。经过了长时间的发展，基本上成了绝大部分Python科学计算的基础包，当然也包括所有提供Python接口的深度学习框架。

支持的数据类型
---------------------

    - ``bool`` 用一位存储的布尔类型（值为TRUE或FALSE）
    - ``inti`` 由所在平台决定其精度的整数（一般为int32或int64）
    - ``int8`` 整数，范围为 -128至127
    - ``int16`` 整数，范围为 -2**16至32767
    - ``int32`` 整数，范围为 -2**31至2**31-1
    - ``int64`` 整数，范围为 -2**64至2**64-1
    - ``uint8`` 无符号整数，范围为0至255
    - ``uint16`` 无符号整数，范围为0至 65 535
    - ``uint32`` 无符号整数，范围为0至 2**32-1
    - ``uint64`` 无符号整数，范围为0至 2**64-1
    - ``float16`` 半精度浮点数（16位）：其中用1位表示正负号，5位表示指数，10位表示尾数
    - ``float32`` 单精度浮点数（32位）：其中用1位表示正负号，8位表示指数，23位表示尾数
    - ``float64`` 或 ``float`` 双精度浮点数（64位）：其中用1位表示正负号，11位表示指数，52位表示尾数
    - ``complex64`` 复数，分别用两个32位浮点数表示实部和虚部
    - ``complex128`` 或 ``complex`` 复数，分别用两个64位浮点数表示实部和虚部

array 核心模块
---------------

.. note::

    array - 由多个元素类型组成的数组。数组中所有元素的类型必须是相同的，要么是上面说的基本类型，要么是列表。
    数组中有两个概念：

    - axes(轴)   就是每个元素类型的长度
    - rank(秩)   他是轴的个数，也叫组维度

    如一个二维数组 array([[1,2,3],[3,4,5]]),他的秩 为2 ，轴为3,

创建数组
^^^^^^^^^^^^^^^^^^^

    >>> import numpy as np
    >>> a=np.array([1,2,3,4]) # 一维数组
    >>> b=np.array([[1,2,3],['a','b','c']]) # 二维数组
    >>> a.shape # shape属性只有一个元素，所以是一维数组
    (4,)
    >>> b.shape # shape属性有两个元素，所以是二维数组，0轴长度为2,1轴长度为3
    (2, 3)
    >>> np.arange(1,5,1) # 自动生成 开始，结束，步长
    array([1, 2, 3, 4])
    >>> np.linspace(1,5,5) # 等差数列 开始，结束，个数
    array([ 1.,  2.,  3.,  4.,  5.])
    >>> np.logspace(0,2,5) # 等比数列
    array([   1.        ,    3.16227766,   10.        ,   31.6227766 ,  100.        ])
    >>> np.empty((3,4),np.int) # 只分配空间，不初始化操作，速度最快。注意，没有初始化
    array([[1739692720,        517, 1787770920,        517],
       [1787772000,        517, 1787543216,        517],
       [1787543088,        517, 1788022832,        517]])
    >>> np.zeros((2,2)) # 初始化为0
    array([[ 0.,  0.],
       [ 0.,  0.]])
    >>> np.ones(2) #初始化 1
    array([ 1.,  1.])
    >>> np.fromstring(b'abcde',dtype=np.int8) # 从字符串生成 ，取得ASCII编码值
    array([ 97,  98,  99, 100, 101], dtype=int8)
    >>> np.fromfunction(lambda x,y:x+y+1,(2,2)) # 从方法生成
    array([[ 1.,  2.],
       [ 2.,  3.]])


存取元素
^^^^^^^^^^^^^^^^

#. 一维数组

    >>> a=np.arange(10)
    >>> a
    array([0, 1, 2, 3, 4, 5, 6, 7, 8, 9])
    >>> a[5] # 一维数组存取同  list
    5
    >>> a[1:-1:2] # 第三个参数表示步长
    array([1, 3, 5, 7])
    >>> a[::-1] # 步长1 负数表示顺序颠倒
    array([9, 8, 7, 6, 5, 4, 3, 2, 1, 0])
    >>> a[1,2]=100,200 #可以改变
    array([  0, 100, 200,   3,   4,   5,   6,   7,   8,   9])
    >>> b=a[3:6] # b与a使用相同的地址，改一个两个都改
    >>> a[[2,4,-1]] #
    array([200,   4,   9])
    >>> x=np.arange(10,1,-1)
    >>> x[np.array([3,3,1,8])] #array 取数据
    array([7, 7, 9, 2])
    >>> x[[3,3,1,8,3,3,3,3]].reshape(2,4)
    array([[7, 7, 9, 2],
       [7, 7, 7, 7]])

#. 多维数据


    >>> a=np.array([[1,2,3,4,5],[22,32,42,52,62],[33,43,53,63,73]])
    >>> a[2,3] or a[(2,3)] # 第三列 第4个元素
    63
    >>> a[1:,[0,2,4]] # 1: 选取的是1行之后的所有行，[0,2,4] 选取的是行的第 0,2,4 个元素
    array([[22, 42, 62],
       [33, 53, 73]])

#. 结构数组

